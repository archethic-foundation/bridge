const tokenInstance = await DummyToken.deployed()
let balanceAccount0 = await tokenInstance.balanceOf(accounts[0])
web3.utils.fromWei(balanceAccount0)
let balanceAccount4 = await tokenInstance.balanceOf(accounts[4])
web3.utils.fromWei(balanceAccount4)
let balanceAccount5 = await tokenInstance.balanceOf(accounts[5])
web3.utils.fromWei(balanceAccount5)

// Put some UCO in the pool from account4
let tokenInstance = await DummyToken.deployed()
let recipientAddress = '0x24e57fc6cFb7F67928E32Aee3e3FF98f0e968a5d';
let amountToSend = web3.utils.toWei('3000', 'ether');
await tokenInstance.transfer(recipientAddress, amountToSend, { from: accounts[0] });


// Put some ETH in the pool
let amountToSendHTLC_ETH = web3.utils.toWei('50', 'ether');
let recipientAddressHTLC_ETH = '0x26F8C6DB23a4aa5293eEeEe8A3317773e849CF44'; 
web3.eth.sendTransaction({from: accounts[0], to: recipientAddressHTLC_ETH, value: amountToSendHTLC_ETH});

// Check Balances
await web3.eth.getBalance('0x26F8C6DB23a4aa5293eEeEe8A3317773e849CF44');
let balancePool = await tokenInstance.balanceOf('0x24e57fc6cFb7F67928E32Aee3e3FF98f0e968a5d');
web3.utils.fromWei(balancePool);

// conf testnet

Address: 0x5bA1D8DC7E0baC18D7dD7664AAB59998FC6d3229

Network Name: Mumbai
New RPC URL: https://polygon-mumbai.infura.io/v3/4458cf4d1689497b9a38b1d6bbf05e78
Chain ID: 80001
Currency Symbol: MATIC
Block Explorer URL: https://mumbai.polygonscan.com


Network Name: Binance Smart Chain - Testnet
New RPC URL: https://bsc-testnet.publicnode.com
Chain ID: 97
Currency Symbol: tBNB
Block Explorer URL: https://testnet.bscscan.com